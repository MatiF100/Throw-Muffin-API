// Code generated by ent, DO NOT EDIT.

package workout

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the workout type in the database.
	Label = "workout"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIntensity holds the string denoting the intensity field in the database.
	FieldIntensity = "intensity"
	// Table holds the table name of the workout in the database.
	Table = "workouts"
)

// Columns holds all SQL columns for workout fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldIntensity,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIntensity holds the default value on creation for the "Intensity" field.
	DefaultIntensity int
	// IntensityValidator is a validator for the "Intensity" field. It is called by the builders before save.
	IntensityValidator func(int) error
)

// OrderOption defines the ordering options for the Workout queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the Name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByIntensity orders the results by the Intensity field.
func ByIntensity(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIntensity, opts...).ToFunc()
}
